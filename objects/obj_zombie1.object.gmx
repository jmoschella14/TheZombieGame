<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_zombier</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed = .1;
spd = .1;
spd += random_range(1.4, 2.4);
hspd = 0;
vspd = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//directon sprite
direction = round(point_direction(x,y,obj_joey.x,obj_joey.y) / 90) * 90;

switch(direction)
{
case 0:
sprite_index = spr_zombier
break;

case 90: sprite_index = spr_zombieu
break;

case 180: sprite_index = spr_zombiel
break;

case 270: sprite_index = spr_zombied
break;
}

path = path_add();
var cx= (obj_joey.x/32) * 32 + 16;
var cy= (obj_joey.y/32) * 32 + 16;

if(mp_grid_path(global.grid, path, x, y, cx, cy, 1)){
path_start(path,spd,path_action_stop, false);
}

// Horizontal collisions

if (place_meeting(x+hspd,y, obj_collision)) {
    while (!place_meeting(x+sign(hspd), y, obj_collision)) {
        x+= sign(hspd);
    }
    hspd = 0;
}
with(obj_zombie1){
    other.x += 5;
    other.y += 5;
}

// Move horizontally

x += hspd;

// Vertical collisions

if (place_meeting(x,y+vspd, obj_collision)) {
    while (!place_meeting(x, y+sign(vspd),  obj_collision)) {
        y+= sign(vspd);
    }
    vspd = 0;
}
with(obj_zombie1){
    other.x += 5;
    other.y += 5;
}

// Move vertically

y += vspd;

//diagnal collision
if(place_meeting(x+hspd, y+vspd,  obj_collision))
{
    while(!place_meeting(x+sign(hspd), y + sign(vspd),  obj_collision))
    {
        x+= sign(hspd);
        y+= sign(vspd);
    }
    hspd = 0;
    vspd = 0;
}
with(obj_zombie1){
    other.x += 5;
    other.y += 5;
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
